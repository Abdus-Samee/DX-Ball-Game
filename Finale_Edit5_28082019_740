#include <stdio.h>

#include <string.h>

#include <math.h>

#include <stdlib.h>

#include <time.h>

#include <Windows.h>

#include "iGraphics.h"
#include "image.h"
int box_x=0;

int box_y=550;

int credit_x=800;

int credit_y=500;

int title_x=350;

int title_y=813;

int gift_x,gift_y;

int isgift=0;

 int additional_length=0;

 int duration;

int gift_change=5;

int timer;

int ara[2000];

int p1=0;

int p2=790;

int isballstarted=0;

int px,py;

int ball_x=100;

int ball_y=20;

int dx=7;

int dy=5;

int rad=10;

int stick_x=60;

int stick_y=0;

int stick_len=80;

int stick_wi=10;

int score;

int i,j,xx,yy;

int colour;

char update[800];

char finale[800];

int cover;

int clr1=50,clr2=50,clr3=50;

int clr[2000][3];

int rate_x=1;

int rate_y=1;

int option;

char str[100];

char str2[100];

int len;

int mode;





void drawTextBox()
{
	iSetColor(150, 150, 150);

	iText(170,410,"NAME:",GLUT_BITMAP_TIMES_ROMAN_24);

	iSetColor(0,255,255);

	iRectangle(250, 400, 250, 30);

	iSetColor(150,150,150);

	iText(330,285,"CONTINUE",GLUT_BITMAP_HELVETICA_18);

	iSetColor(0,0,255);

	iRectangle(320,280,130,30);
}




void iDraw()

{

    iClear();

    if(cover==4)
    {
        drawTextBox();
        if(mode == 1)
        {
            iSetColor(255, 255, 255);
            iText(255, 410 , str);
        }

        iText(10, 10, "Click to activate the box, enter to finish.");
    }

if(cover==0)

{
iShowBMP(0,0,"black.bmp");

iSetColor(0,255,0);

iRectangle(box_x,box_y,130,100);

if(box_x<340) box_x+=2;

iSetColor(255,255,255);

iText(title_x,title_y,"DX  BALL",GLUT_BITMAP_TIMES_ROMAN_24);

if(title_y>600) title_y--;

iSetColor(255,223,0);

iText(credit_x,credit_y,"-by SACHIN & SAMEE",GLUT_BITMAP_HELVETICA_18);

if(credit_x>320) credit_x-=3;

iSetColor(0,255,255);

iText(300,300,"PLAY",GLUT_BITMAP_TIMES_ROMAN_24);

iText(300,260,"RULES",GLUT_BITMAP_TIMES_ROMAN_24);

iText(300,220,"EXIT",GLUT_BITMAP_TIMES_ROMAN_24);

iSetColor(0,0,255);

iFilledCircle(285,310,5);
iFilledCircle(285,270,5);
iFilledCircle(285,230,5);

if(option==1){
iSetColor(255,255,255);
iFilledRectangle(290,290,80,40);
iSetColor(0,0,0);
iText(300,300,"PLAY",GLUT_BITMAP_TIMES_ROMAN_24);
        }

if(option==2){
iSetColor(255,255,255);
iFilledRectangle(290,250,90,40);
iSetColor(0,0,0);
iText(300,260,"RULES",GLUT_BITMAP_TIMES_ROMAN_24);
        }

if(option==3){
iSetColor(255,255,255);
iFilledRectangle(290,210,80,40);
iSetColor(0,0,0);
iText(300,220,"EXIT",GLUT_BITMAP_TIMES_ROMAN_24);
        }

    }



if(cover==1){

iShowBMP(0,0,"mosaic.bmp");

sprintf(update,"Score : %d",score);

iSetColor(255,255,255);

iText(0,800,"DX BALL by SACHIN & SAMEE",GLUT_BITMAP_HELVETICA_18);

iSetColor(0,255,255);

iText(600,800,update,GLUT_BITMAP_HELVETICA_18);

iSetColor(255,0,0);

iFilledCircle(ball_x,ball_y,rad);

iSetColor(255,255,51);

iFilledRectangle(stick_x,stick_y,stick_len,stick_wi);

if(isgift==1)
{
    iSetColor(0,255,0);
    iFilledCircle(gift_x,gift_y,5);
}
yy=p2;

for(i=0;i<20;i++)//row

            {

xx=p1;

for(j=0;j<40;j++)//column

                {

if(ara[(20-i-1)*40+j]==0)

                    {
                        //iSetColor(clr[(19-i)*40+j][0],clr[(19-i)*40+j][1],clr[(19-i)*40+j][2]);
                        //iFilledRectangle(xx,yy,20,10);
                        //iShowBMP(xx,yy,"desired.bmp");
                        show_block(xx, yy);

                    }

xx+=20;

                }

yy-=10;

            }

        }


if(cover==2){

iShowBMP(0,0,"file.bmp");

iSetColor(0,255,0);

iRectangle(340,630,130,70);

iSetColor(255,255,255);

iText(350,650,"DX  BALL",GLUT_BITMAP_TIMES_ROMAN_24);


iSetColor(255,255,255);

iText(245,590,"GAME  IS  OVER !  WELL   PLAYED ! !",GLUT_BITMAP_TIMES_ROMAN_24);

iSetColor(0,255,0);

sprintf(finale,"Player: %s\nYOUR FINAL SCORE IS  : %d",str2,score);

iText(250,300,finale,GLUT_BITMAP_TIMES_ROMAN_24);

iSetColor(0,0,255);

iText(250,200,"PRESS  '/'  TO EXIT",GLUT_BITMAP_TIMES_ROMAN_24);

    }



if(cover==3){

iShowBMP(0,0,"rules.bmp");

iSetColor(0,0,255);

iRectangle(290,640,100,50);

iSetColor(0,0,0);

iText(300,650," RULES " ,GLUT_BITMAP_TIMES_ROMAN_24);

iText(250,600,"Press spacebar key to shoot the ball.",GLUT_BITMAP_TIMES_ROMAN_24);

iText(250,560,"Press  '-->'  and  '<--'  keys to move the bar.",GLUT_BITMAP_TIMES_ROMAN_24);

iText(250,530,"Press  'p'  to pause the game.",GLUT_BITMAP_TIMES_ROMAN_24);

iText(250,500,"Press  'r'  to resume the game.",GLUT_BITMAP_TIMES_ROMAN_24);

iText(250,420,"Press  '*'  to go back.",GLUT_BITMAP_TIMES_ROMAN_24);

iSetColor(178,190,181);

iFilledCircle(235,610,5);
iFilledCircle(235,570,5);
iFilledCircle(235,540,5);
iFilledCircle(235,510,5);
    }

}





void ballchange()

{

if(isballstarted==1)

    {
    if(duration>0)
     duration-=6;
    else
    {
        stick_len=80;
        additional_length=0;
    }

if(isgift==0) timer--;

if(isgift==1)  gift_y-=10;

//if(score > 15) dx=rate_x*10;

//if(score > 30) dy=rate_y*12;

//if(score > 45) stick_len=70;

ball_x+=dx;

ball_y+=dy;

if(isgift==1)
{
      if(gift_y<=10&&gift_x+5>=stick_x&&gift_x-5<=stick_x+stick_len)
      {

        isgift=0;
        additional_length=20;
        stick_len+=additional_length;
        srand(0);
         timer=rand()*10;
         duration=1500;
      }
      else if(gift_y<=0)
      {
          isgift=0;
          srand(0);
     timer=rand()*10;
      }
}

if(ball_y+rad>600)

          {

if(ara[(int)((ball_y+rad-600)/10.0)*40+(int)(ball_x/20.0)]==0)

           {

ara[(int)((ball_y+rad-600)/10.0)*40+(int)(ball_x/20.0)]=1;

score++;

 if(timer<=0)
 {
     srand(0);
     timer=rand()*10;
     gift_x=ball_x;
     gift_y=ball_y+rad;
     isgift=1;
 }

if(dy>0) dy=-dy, rate_y*=-1;

           }

          }

if(ball_x>790 || ball_x<10)

dx=-dx, rate_x*=-1;

if(ball_y>813) dy=-dy, rate_y*=-1;

if(ball_y>=800)

dy=-dy, rate_y*=-1;

if(ball_x+rad>=stick_x&&ball_x-rad<=stick_x+stick_len&&ball_y==stick_y+stick_wi)

        {

dy=-dy, rate_y*=-1;

if(ball_x<=stick_x+stick_len/2) dx=-dx, rate_x*=-1;

        }

else

        {

if(ball_y<stick_y){

cover=2;

            }
        }
if(score == 800) cover=2;
       }

    }





void iMouseMove(int mx, int my)

{



}





void iMouse(int button, int state, int mx, int my)

{

if(button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)

    {

        if(mx >= 250 && mx <= 500 && my >= 400 && my <= 430 && mode == 0)
		{
			mode = 1;
		}

		else if(mx >= 320 && mx <= 450 && my >= 280 && my <= 310)
        {
            cover = 1;
        }

    }

if(button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)

    {



    }

}



void iKeyboard(unsigned char key)

{

    int i;
	if(mode == 1)
	{
        if(key == '\r')
		{
			mode = 0;
			strcpy(str2,str);
			for(i = 0; i < len; i++)
				str[i] = 0;
			len = 0;
		}
		else
		{
			str[len] = key;
			len++;
		}
	}

    if(key == '*')
    {
        cover=0;
    }

    if(key == '/')
    {
        exit(0);
    }

    if(key == 'p')
    {
        iPauseTimer(0);

    }

    if(key == '+')
    {
        if(cover ==4) cover =1;
    }

if(key == 'r')

    {

iResumeTimer(0);

    }

if(key==' ')

isballstarted=1;

if(key == '\r')
{
    if(option == 1) cover=4;

    else if(option == 2) cover=3;

    else if(option == 3) exit(0);

    }
}





void iSpecialKeyboard(unsigned char key)

{



if(key == GLUT_KEY_END)

    {

exit(0);

    }

if(key == GLUT_KEY_LEFT)

    {

if(stick_x>0)

       {

stick_x-=15;

if(isballstarted==0)

ball_x-=15;

       }

    }

if(key == GLUT_KEY_RIGHT)

    {

if(stick_x<720)

        {

stick_x+=15;

if(isballstarted==0)

ball_x+=15;

        }

    }

if(key == GLUT_KEY_DOWN)
    {
if(option != 3) option++;
    }

if(key ==GLUT_KEY_UP)
    {
if(option != 1) option--;
    }

}





int main()

{
    load_image();
PlaySound("F:\\DX Ball\\Action_Sport.wav", NULL, SND_LOOP | SND_ASYNC);
score=0;
int i,j;
for(i=0;i<40;i++)
    {
for(j=0;j<40;j++)
        {
clr[i*40+j][0]=clr1;
clr[i*40+j][1]=clr2;
clr[i*40+j][2]=clr3;
            clr1=(clr1+100)%256;
            clr2=(clr2+200)%256;
            clr3=(clr3+300)%256;
        }
    }
   srand(0);
   timer=rand()*10;

iSetTimer(20,ballchange);

iInitialize(800,813,"DX_BALL");

return 0;

}

